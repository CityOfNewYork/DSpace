upstream dspace {
  server 127.0.0.1:8080;
}

server_tokens off;

server {
    listen                              80;
    server_name                         10.0.0.2;
    client_max_body_size                20M;

    if ( $request_method ~ ^(GET|POST|HEAD|PATCH|DELETE|PUT) ) {
      return 301 https://$server_name$request_uri;
    }
}

server {
  listen                                443 ssl;
  server_name                           10.0.0.2;
  client_max_body_size                  20M;

  add_header X-Frame-Options                        SAMEORIGIN;
  add_header X-Content-Type-Options                 nosniff;
  add_header X-XSS-Protection                       "1; mode=block";
  add_header Strict-Transport-Security              "max-age=63072000; includeSubdomains; preload";
  add_header Content-Security-Policy                "default-src 'self'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' http://ajax.googleapis.com; font-src 'self'; object-src 'self'";
  add_header 'Access-Control-Allow-Origin'          "$http_origin" always;
  add_header 'Access-Control-Allow-Credentials'     'true' always;
  add_header 'Access-Control-Allow-Methods'         'GET, POST, PUT, DELETE, OPTIONS' always;
  add_header 'Access-Control-Allow-Headers'         'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
  add_header 'Cache-Control'                        'no-store'
  add_header 'Pragma'                               'no-cache'
  # required to be able to read Authorization header in frontend
  #add_header 'Access-Control-Expose-Headers'       'Authorization' always;

  ssl_certificate                       /home/vagrant/ssl/dspace_dev.pem;
  ssl_certificate_key                   /home/vagrant/ssl/dspace_dev.key;
  ssl_protocols                         TLSv1.1 TLSv1.2;
  ssl_ciphers                           ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:DH-DSS-AES256-SHA:DH-RSA-AES256-SHA:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES128-SHA256:AES128-GCM-SHA256:DHE-DSS-AES128-SHA:DHE-RSA-AES128-SHA:AES128-SHA:DH-DSS-AES128-SHA:DH-RSA-AES128-SHA:EDH-DSS-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:DH-DSS-DES-CBC3-SHA:DH-RSA-DES-CBC3-SHA;

  location / {
    # Prevent POST requests from referers not declared in valid_referers
    valid_referers 10.0.0.2;
    if ($request_method = 'POST') {
      set $post_referer post;
    }
    if ($invalid_referer) {
      set $post_referer "${post_referer}+invalid_referer";
    }
    if ($post_referer = "post+invalid_referer") {
      return 403;
    }

    if ($request_method = 'OPTIONS') {
      # Tell client that this pre-flight info is valid for 20 days
      add_header Access-Control-Max-Age    1728000;
      add_header Content-Type              'text/plain charset=UTF-8';
      add_header Content-Length            0;
      return 204;
    }

    proxy_pass                          http://dspace;
    proxy_set_header                    Host $host;
    proxy_set_header                    X-Forwarded-Proto $scheme;
    proxy_set_header                    X-Real-IP $remote_addr;
  }
}
